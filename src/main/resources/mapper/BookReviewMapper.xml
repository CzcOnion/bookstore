<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.csu.bookstore.persistence.BookReviewMapper" >
  <resultMap id="BaseResultMap" type="org.csu.bookstore.domain.BookReview" >
    <id column="review_id" property="reviewId" jdbcType="DECIMAL" />
    <result column="book_id" property="bookId" jdbcType="DECIMAL" />
    <result column="user_id" property="userId" jdbcType="DECIMAL" />
    <result column="date" property="date" jdbcType="TIMESTAMP" />
    <result column="count" property="count" jdbcType="INTEGER" />
    <result column="title" property="title" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="org.csu.bookstore.domain.BookReview" extends="BaseResultMap" >
    <result column="text" property="text" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    review_id, book_id, user_id, date, count, title
  </sql>
  <sql id="Blob_Column_List" >
    text
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from book_review
    where review_id = #{reviewId,jdbcType=DECIMAL}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from book_review
    where review_id = #{reviewId,jdbcType=DECIMAL}
  </delete>
  <insert id="insert" parameterType="org.csu.bookstore.domain.BookReview" >
    insert into book_review (review_id, book_id, user_id, 
      date, count, title, text
      )
    values (#{reviewId,jdbcType=DECIMAL}, #{bookId,jdbcType=DECIMAL}, #{userId,jdbcType=DECIMAL}, 
      #{date,jdbcType=TIMESTAMP}, #{count,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{text,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="org.csu.bookstore.domain.BookReview" >
    insert into book_review
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="reviewId != null" >
        review_id,
      </if>
      <if test="bookId != null" >
        book_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="date != null" >
        date,
      </if>
      <if test="count != null" >
        count,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="text != null" >
        text,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="reviewId != null" >
        #{reviewId,jdbcType=DECIMAL},
      </if>
      <if test="bookId != null" >
        #{bookId,jdbcType=DECIMAL},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=DECIMAL},
      </if>
      <if test="date != null" >
        #{date,jdbcType=TIMESTAMP},
      </if>
      <if test="count != null" >
        #{count,jdbcType=INTEGER},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="text != null" >
        #{text,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.csu.bookstore.domain.BookReview" >
    update book_review
    <set >
      <if test="bookId != null" >
        book_id = #{bookId,jdbcType=DECIMAL},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=DECIMAL},
      </if>
      <if test="date != null" >
        date = #{date,jdbcType=TIMESTAMP},
      </if>
      <if test="count != null" >
        count = #{count,jdbcType=INTEGER},
      </if>
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="text != null" >
        text = #{text,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where review_id = #{reviewId,jdbcType=DECIMAL}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="org.csu.bookstore.domain.BookReview" >
    update book_review
    set book_id = #{bookId,jdbcType=DECIMAL},
      user_id = #{userId,jdbcType=DECIMAL},
      date = #{date,jdbcType=TIMESTAMP},
      count = #{count,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR},
      text = #{text,jdbcType=LONGVARCHAR}
    where review_id = #{reviewId,jdbcType=DECIMAL}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.csu.bookstore.domain.BookReview" >
    update book_review
    set book_id = #{bookId,jdbcType=DECIMAL},
      user_id = #{userId,jdbcType=DECIMAL},
      date = #{date,jdbcType=TIMESTAMP},
      count = #{count,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR}
    where review_id = #{reviewId,jdbcType=DECIMAL}
  </update>

  <select id="getNextId" resultType="int">
    select
    max(review_id)+1
    from
    book_review
  </select>


  <select id="selectByBookId" parameterType="java.lang.Integer" resultType="org.csu.bookstore.domain.Image">
    select
    review_id as reviewId,
    book_id as bookId,
    user_id as userId,
    text,
    book_review.date,
    book_review.count,
    title
    from
    book_review
    where
    book_id = #{bookId}
  </select>

  <select id="getBookReviews" resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from book_review
  </select>
  <select id="SearchBookReviewByText" parameterType="java.lang.String" resultType="org.csu.bookstore.domain.BookReview">
       select
       review_id as reviewId,
       book_id as bookId,
       user_id as userId,
       text,
       book_review.date,
       book_review.count,
       title
       from
       book_review
       where text like "%"#{text}"%"
    </select>

  <select id="SearchBookReviewById" parameterType="int" resultType="org.csu.bookstore.domain.BookReview">
       select
       review_id as reviewId,
       book_id as bookId,
       user_id as userId,
       text,
       book_review.date,
       book_review.count,
       title
       from
       book_review
       where book_id = #{bookId}
    </select>


  <select id="selectByUserId" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from book_review
    where user_id = #{userId}
  </select>

</mapper>